# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

APP_STORE_CONNECT_API_KEY_ISSURE_ID = ENV["APP_STORE_CONNECT_API_KEY_ISSURE_ID"]
APP_STORE_CONNECT_API_KEY_ID = ENV["APP_STORE_CONNECT_API_KEY_ID"]
APP_STORE_CONNECT_API_KEY_CONTENT = ENV["APP_STORE_CONNECT_API_KEY_CONTENT"]
GIT_PERSONAL_ACCESS_TOKEN = ENV["GIT_PERSONAL_ACCESS_TOKEN"]
MATCH_PASSWORD = ENV["MATCH_PASSWORD"]

def delete_temp_keychain(name)
  delete_keychain(
    name: name
  ) if File.exist? File.expand_path("~/Library/Keychains/#{name}-db")
end

def create_temp_keychain(name, password)
  create_keychain(
    name: name,
    password: password,
    unlock: false,
    timeout: 0
  )
end

def ensure_temp_keychain(name, password)
  delete_temp_keychain(name)
  create_temp_keychain(name, password)
end

platform :ios do

  desc "Push a new prod build to TestFlight"
  lane :build do
    keychain_name = "admin"
    keychain_password = "admin"
    ensure_temp_keychain(keychain_name, keychain_password)

    api_key = app_store_connect_api_key(
      key_id: APP_STORE_CONNECT_API_KEY_ID,
      issuer_id: APP_STORE_CONNECT_API_KEY_ISSURE_ID,
      key_content: APP_STORE_CONNECT_API_KEY_CONTENT,            
      duration: 1200,            
      in_house: false
    )

    build_number = number_of_commits(all: false)

    increment_build_number(
      build_number: build_number
    )

    match(
      type: 'appstore',
      app_identifier: "-", # TODO: enter the app identifier here
      git_basic_authorization: GIT_PERSONAL_ACCESS_TOKEN,
      readonly: true,
      keychain_name: keychain_name,
      keychain_password: keychain_password,
      api_key: api_key
    )

    build_app(
      workspace: "Runner.xcworkspace",
    )

    # upload_to_testflight(
    #   skip_waiting_for_build_processing: true
    # )
  end

end